# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  beats {
#    host => ["'${ipv4}'"]
    port => 5044
    ssl => false
  }
  udp {
    port => 7001
    type => firewall
  }
}

# Translate
filter {
  if "winlogbeat" in [agent][type] {
  # Translate common Event IDs
        translate {
      field => "[winlog][event_id]"
      destination => "[EventDesc]"
      override => true
      dictionary => [ "4625", "4625 An account failed to log on",
	              "4648", "4648 A logon was attempted using explicit credentials",
		      "4656", "4656 A handle to an object was requested",
                      "4662", "4662 An operation was performed on an object",
                      "4663", "4663 An attempt was made to access an object",
                      "4672", "4672 Special privileges assigned to new logon",
                      "4673", "4673 A privileged service was called",
                      "4690", "4690 An attempt was made to duplicate a handle to an object",
                      "4720", "4720 A user account was created",
                      "4722", "4722 A user account was enabled",
                      "4724", "4724 An attempt was made to reset an accounts password",
                      "4725", "4725 A user account was disabled",
                      "4727", "4727 A security-enabled global group was created",
                      "4728", "4728 A member was added to a security-enabled global group",
                      "4729", "4729 A member was removed from a security-enabled global group",
                      "4735", "4735 A security-enabled local group was changed",
                      "4737", "4737 A security-enabled global group was changed",
                      "4738", "4738 A user account was changed",
                      "4740", "4740 A user account was locked out",
                      "4754", "4754 A security-enabled universal group was created",
                      "4756", "4756 A member was added to a security-enabled universal group",
                      "4757", "4757 A member was removed to a security-enabled universal group",
                      "4767", "4767 A user account was unlocked",
                      "4768", "4768 A Kerberos authentication ticket (TGT) was requested",
                      "4769", "4769 A Kerberos service ticket was requested",
                      "4770", "4770 A Kerberos service ticket was renewed",
                      "4771", "4771 Kerberos pre-authentication failed",
                      "4780", "4780 The ACL was set on accounts which are members of administrators groups",
		      "4907", "4907 Auditing settings on object were changed",
                      "4932", "4932 Synchronization of a replica of an Active Directory naming context has begun",
	              "4933", "4933 Synchronization of a replica of an Active Directory naming context has ended",
                      "5136", "5136 A directory service object was modified",
                      "5145", "5145 A network share object was checked to see whether client can be granted desired access",
                      "5152", "5152 The Windows Filtering Platform blocked a packet",
                      "5157", "5157 The Windows Filtering Platform has blocked a connection",
                      "5159", "5159 The Windows Filtering Platform has blocked a bind to a local port",
		      "6272", "6272 Network Policy Server granted access to a user",
	              "6273", "6273 Network Policy Server denied access to a user",
		      "6274", "6274 Network Policy Server discarded the request for a user",
		      "6278", "6278 Network Policy Server granted full access to a user because the host met the defined health policy"
                    ]
         }

#####
## Translate common Event IDs to Quadrants
## Comments and feedback
## https://docs.google.com/document/d/1UqTe3Svsy5_hJUgG4AY6xYJe9AEI8Xksy45KIsdHaz8/edit?usp=sharing
#
     translate {
      field => "[winlog][event_id]"
      destination => "[quadrant]"
      override => true
      dictionary => [ "4625", "Urgent And Important",
                      "4648", "Important And Not Urgent",
                      "4656", "Not Important And Not Urgent",
                      "4662", "Not Important And Not Urgent",
                      "4663", "Urgent And Not Important",
                      "4672", "Urgent And Not Important",
                      "4673", "Urgent And Not Important",
                      "4690", "Important And Not Urgent",
                      "4720", "Important And Not Urgent",
                      "4722", "Important And Not Urgent",
                      "4724", "Urgent And Important",
                      "4725", "Important And Not Urgent",
                      "4727", "Important And Not Urgent",
                      "4728", "Urgent And Important",
                      "4729", "Urgent And Important",
                      "4735", "Important And Not Urgent",
                      "4737", "Important And Not Urgent",
                      "4738", "Important And Not Urgent",
                      "4740", "Urgent And Important",
                      "4754", "Urgent And Not Important",
                      "4756", "Urgent And Important",
                      "4757", "Urgent And Important",
                      "4767", "Important And Not Urgent",
                      "4768", "Not Important And Not Urgent",
                      "4769", "Not Important And Not Urgent",
                      "4770", "Important And Not Urgent",
                      "4771", "Urgent And Important",
                      "4780", "Important And Not Urgent",
                      "4907", "Not Important And Not Urgent",
                      "4932", "Not Important And Not Urgent",
                      "4933", "Not Important And Not Urgent",
                      "5136", "Not Important And Not Urgent",
                      "5145", "Not Important And Not Urgent",
                      "5152", "Not Important And Not Urgent",
                      "5157", "Not Important And Not Urgent",
                      "5159", "Important And Not Urgent",
                      "6272", "Important And Not Urgent",
                      "6273", "Important And Not Urgent",
                      "6274", "Not Important And Not Urgent",
                      "6278", "Urgent And Not Important"
                    ]
      }
#
#
#   }

if [EventDesc] {
mutate {
 add_tag => [ "common_event_id" ,"windows_correlation" ]
 }
}
}
}


# Removes ::ffff from IP address 
filter {
  if "Winlogbeat" in [tags] {
  mutate {
    gsub => ["[winlog][event_data][IpAddress]", "::ffff:", ""]
  }
}
}

# Removes ::ffff from IP address 
filter {
  if "winlogbeat" in [agent][type] {
  mutate {
    gsub => ["[winlog][event_data][IpAddress]", "::ffff:", ""]
  }
}
}

#Active Directory Logon 
filter {
  if "Winlogbeat" in [tags] and [winlog][provider_name] == "Microsoft-Windows-Security-Auditing" and [winlog][event_id] == 4624 or [winlog][event_id] == 4634 {
   mutate { 
#   remove_field => ["[message]"] 
   add_field => { "short_message" => "Logon Activity" }
  } 
 }
}
 
#Active Directory Logon Failure
filter {
  if "Winlogbeat" in [tags] and [winlog][provider_name] == "Microsoft-Windows-Security-Auditing" and [winlog][event_id] == 4625 {
   mutate { 
#   remove_field => ["[message]"] 
   add_field => { "short_message" => "Logon Failure Activity" }
  } 
 }
}
 
 
 
#Active Directory Logon - Event ID 4648 - A logon was attempted using explicit credentials.
filter {
  if "Winlogbeat" in [tags] and [winlog][provider_name] == "Microsoft-Windows-Security-Auditing" and [winlog][event_id] == 4648 {
   mutate { 
#   remove_field => ["[message]"] 
   add_field => { "short_message" => "A logon was attempted using explicit credentials" }
  } 
 }
}
 
 
 
# Active Directory - Security Group Management
 
 
filter {
  if "Winlogbeat" in [tags] and [winlog][provider_name] == "Microsoft-Windows-Security-Auditing" and [winlog][event_id] == 4727  {
   mutate { 
   add_field => { "short_message" => "A security-enabled global group was created" }
  } 
 }
 else if [winlog][event_id] == 4728 {
   mutate { 
   add_field => { "short_message" => "A member was added to a security-enabled global group" }
  } 
 }
 else if [winlog][event_id] == 4729 {
   mutate { 
   add_field => { "short_message" => "A member was removed from a security-enabled global group" }
  } 
 }
 else if [winlog][event_id] == 4730 {
   mutate { 
   add_field => { "short_message" => "A security-enabled global group was deleted" }
  } 
 }
 else if [winlog][event_id] == 4731 {
   mutate { 
   add_field => { "short_message" => "A security-enabled local group was created" }
  } 
 }
 else if [winlog][event_id] == 4732 {
   mutate { 
   add_field => { "short_message" => "A member was added to a security-enabled local group" }
  } 
 }
 else if [winlog][event_id] == 4733 {
   mutate { 
   add_field => { "short_message" => "A member was removed from a security-enabled local group" }
  } 
 }
 else if [winlog][event_id] == 4734  {
   mutate { 
   add_field => { "short_message" => "A security-enabled local group was deleted" }
  } 
 }
 else if [winlog][event_id] == 4735 {
   mutate { 
   add_field => { "short_message" => "A security-enabled local group was changed" }
  } 
 }
 else if [winlog][event_id] == 4737 {
   mutate { 
   add_field => { "short_message" => "A security-enabled global group was changed" }
  } 
 }
 else if [winlog][event_id] == 4754 {
   mutate { 
   add_field => { "short_message" => "A security-enabled universal group was created" }
  } 
 }
 else if [winlog][event_id] == 4755 {
   mutate { 
   add_field => { "short_message" => "A security-enabled universal group was changed" }
  } 
 }
 else if [winlog][event_id] == 4756 {
   mutate { 
   add_field => { "short_message" => "A member was added to a security-enabled universal group" }
  } 
 }
 else if [winlog][event_id] == 4757 {
   mutate { 
   add_field => { "short_message" => "A member was removed from a security-enabled universal group" }
  } 
 }
 else if [winlog][event_id] == 4758 {
   mutate { 
   add_field => { "short_message" => "A security-enabled universal group was deleted" }
  } 
 }
 else if [winlog][event_id] == 4764 {
   mutate { 
   add_field => { "short_message" => "A groups type was changed" }
  } 
 }
 
}

#Active Directory Login Types for Event id 4624,4634,4525
# Refence http://techgenix.com/logon-types/ 
filter {
  if "Winlogbeat" in [tags] and [winlog][provider_name] == "Microsoft-Windows-Security-Auditing" and [winlog][event_data][LogonType] == "2" {
   mutate { 
   add_field => { "Method" => "Interactive - Keyboard" }
  } 
 }
 else if [winlog][event_data][LogonType] == "3" {
   mutate { 
   add_field => { "Method" => "Network Logon" } 
 }
 }
 else if [winlog][event_data][LogonType] == "4" {
   mutate { 
   add_field => { "Method" => "Batch - Scheduled Task" }
  } 
 }
 else if [winlog][event_data][LogonType] == "5" {
   mutate { 
   add_field => { "Method" => "Service Account" }
  } 
 }
 else if [winlog][event_data][LogonType] == "7" {
   mutate { 
   add_field => { "Method" => "Unlock System" }
  } 
 }
 else if [winlog][event_data][LogonType] == "8" {
   mutate { 
   add_field => { "Method" => "NetworkCleartext" }
  } 
 }
 else if [winlog][event_data][LogonType] == "9" {
   mutate { 
   add_field => { "Method" => "NewCredentials" }
  } 
 }
 else if [winlog][event_data][LogonType] == "10" {
   mutate { 
   add_field => { "Method" => "RemoteInteractive" }
  } 
 }
 else if [winlog][event_data][LogonType] == "11" {
   mutate { 
   add_field => { "Method" => "CachedInteractive" }
  } 
 }
 
 else if [winlog][event_data][LogonType] == "0" {
   mutate { 
   add_field => { "Method" => "System Account" }
  } 
 }
 
}

#Active Directory Login Types for Event id 4771,4776,4769,4768,
#Reference this https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4776 
 
filter {
  if "Winlogbeat" in [tags] and [winlog][provider_name] == "Microsoft-Windows-Security-Auditing" and [winlog][event_data][Status] == "0x0" {
   mutate { 
   add_field => { "Statusmsg" => "Success" }
  } 
 }
 else if [winlog][event_data][Status] == "0x12" {
   mutate { 
   add_field => { "Statusmsg" => "Account: disabled,expired,locked out,logon hours" } 
 }
 }
  else if [winlog][event_data][Status] == "0xB" {
   mutate { 
   add_field => { "Statusmsg" => "Request start time is later than end time" }
  } 
 }
 else if [winlog][event_data][Status] == "0x17" {
   mutate { 
   add_field => { "Statusmsg" => "Password has expired" }
  } 
 }
 else if [winlog][event_data][Status] == "0x18" {
   mutate { 
   add_field => { "Statusmsg" => "Bad password (PC)" }
  } 
 }
 else if [winlog][event_data][Status] == "0x1b" {
   mutate { 
   add_field => { "Statusmsg" => "Server principal valid for user-to-user only" }
  } 
 } 
 else if [winlog][event_data][Status] == "0x1d" {
   mutate { 
   add_field => { "Statusmsg" => "A service is not available." }
  } 
 }
 else if [winlog][event_data][Status] == "0x20" {
   mutate { 
   add_field => { "Statusmsg" => "Ticket expired- Frequently logged by computer accounts" }
  } 
 }
 else if [winlog][event_data][Status] == "0x25" {
   mutate { 
   add_field => { "Statusmsg" => "Workstation’s clock out of sync with the DC" }
  } 
 }
 else if [winlog][event_data][Status] == "0x6" {
   mutate { 
   add_field => { "Statusmsg" => "Username does not exist or has not replicated" }
  } 
 }
 else if [winlog][event_data][Status] == "0xc000006a" {
   mutate { 
   add_field => { "Statusmsg" => "Incorrect Password" }
  } 
 }
 else if [winlog][event_data][Status] == "0xc0000064" {
   mutate { 
   add_field => { "Statusmsg" => "Username Does Not Exist" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc0000072" {
   mutate { 
   add_field => { "Statusmsg" => "Account is disabled" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc0000234" {
   mutate { 
   add_field => { "Statusmsg" => "Account is Locked Out" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc0000193" {
   mutate { 
   add_field => { "Statusmsg" => "Account Expiration" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc000006f" {
   mutate { 
   add_field => { "Statusmsg" => "Logon Outside Hours" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc0000224" {
   mutate { 
   add_field => { "Statusmsg" => "Use Required to change password next time" }
  } 
 }
 
 
 else if [winlog][event_data][Status] == "0xc0000071" {
   mutate { 
   add_field => { "Statusmsg" => "Password expired" }
  } 
 }
 
# related to event id: 4625
 
 else if [winlog][event_data][Status] == "0xc000006d" {
   mutate { 
   add_field => { "Statusmsg" => "Logon Failure (Server)" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc000006e" {
   mutate { 
   add_field => { "Statusmsg" => "Unknown user name or bad password." }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc000005e" {
   mutate { 
   add_field => { "Statusmsg" => "No Logon Servers available to login" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc0000133" {
   mutate { 
   add_field => { "Statusmsg" => "Workstation’s clock out of sync with the DC" }
  } 
 }
 
 else if [winlog][event_data][Status] == "0xc00002ee" {
   mutate { 
   add_field => { "Statusmsg" => "An Error occured during Logon" }
  } 
 }
 
  else if [winlog][event_data][Status] == "0xc000015b" {
   mutate { 
   add_field => { "Statusmsg" => "Login Not Allowed for this system" }
  } 
 }
 
  else if [winlog][event_data][Status] == "0xc0000225" {
   mutate { 
   add_field => { "Statusmsg" => "Windows Bug and not a risk" }
  } 
 }
 else if [winlog][event_id] == 4725 {
   mutate { 
   add_field => { "Statusmsg" => "Accounts Disabled" }
  } 
 }
 else if [winlog][event_id] == 4740 {
   mutate { 
   add_field => { "Statusmsg" => "Locked Accoounts" }
  } 
 }
 
}


################## FILTER FORTINET ###################################

filter {
  if [type] == "firewall" {
    mutate {
    add_tag => ["fortigate"]
  }
  grok {
    break_on_match => false
    match => [ "message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}" ]
              overwrite => [ "message" ]
    tag_on_failure => [ "failure_grok_fortigate" ]
  }

  kv { }

    if [msg] {
      mutate {
    replace => [ "message", "%{msg}" ]
    }
  }
  mutate {
    convert => { "duration" => "integer" }
    convert => { "rcvdbyte" => "integer" }
    convert => { "rcvdpkt" => "integer" }
    convert => { "sentbyte" => "integer" }
    convert => { "sentpkt" => "integer" }
    convert => { "cpu" => "integer" }
    convert => { "disk" => "integer" }
    convert => { "disklograte" => "integer" }
    convert => { "fazlograte" => "integer" }
    convert => { "mem" => "integer" }
    convert => { "totalsession" => "integer" }
  }
  mutate {
    add_field => [ "fgtdatetime", "%{date} %{time}" ]
    add_field => [ "loglevel", "%{level}" ]
    replace => [ "fortigate_type", "%{type}" ]
    replace => [ "fortigate_subtype", "%{subtype}" ]
    remove_field => [ "date", "time", "eventtime" ]
    #remove_field => [ "msg", "message", "date", "time", "eventtime" ]
  }

  date {
    match => [ "fgtdatetime", "YYYY-MM-dd HH:mm:ss" ]
    locale => "en"
    timezone => "Chile/Continental"
    remove_field => [ "fgtdatetime" ]
  }
  geoip {
    source => "srcip"
    target => "geosrcip"
    add_field => [ "[geosrcip][coordinates]", "%{[geosrcip][longitude]}" ]
    add_field => [ "[geosrcip][coordinates]", "%{[geosrcip][latitude]}" ]
  }
  geoip {
    source => "dstip"
    target => "geodstip"
    add_field => [ "[geodstip][coordinates]", "%{[geodstip][longitude]}" ]
    add_field => [ "[geodstip][coordinates]", "%{[geodstip][latitude]}" ]
  }
  mutate {
    convert => [ "[geoip][coordinates]", "float" ]
}

}
}

output {
  if [host] == "10.10.10.1" {
    elasticsearch {
      hosts => ["es02","es03","es04"]
      index => "fortinet-%{+YYYY.MM.dd}"
      #user => "elastic"
      #password => "pass"
    }
  }
  if [@metadata][pipeline] {
    elasticsearch {
      hosts => ["es02","es03","es04"]
      manage_template => false
      #index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+yyyy.ww}"
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
      pipeline => "%{[@metadata][pipeline]}" 
      #user => "elastic"
      #password => "pass"
    }
  } else {
    elasticsearch {
      hosts => ["es02","es03","es04"]
      manage_template => false
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
      #index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+yyyy.ww}"
      #user => "elastic"
      #password => "pass"
    }
  }
}